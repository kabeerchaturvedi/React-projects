import { useEffect, useState } from "react";

export default function StopWatch() {
  const [isRunning, setIsRunning] = useState(false);
  const [elapsedTime, setElapsedTime] = useState(0);

  useEffect(() => {
    let interval;

    if (isRunning) {
      interval = setInterval(() => {
        setElapsedTime((prevElapsedTime) => prevElapsedTime + 10);
      }, 10);
    } else {
      clearInterval(interval);
    }

    return () => clearInterval(interval);
  }, [isRunning]);

  const startStopWatch = () => {
    setIsRunning(true);
  };

  const stopStopWatch = () => {
    setIsRunning(false);
  };

  const resetStopWatch = () => {
    setIsRunning(false);
    setElapsedTime(0);
  };

  const formatTime = (time) => {
    const minutes = Math.floor(time / 60000);
    const seconds = ((time % 60000) / 1000).toFixed(0);
    const milliseconds = time % 1000;

    return `${minutes}:${seconds < 10 ? "0" : ""}${seconds}:${
      milliseconds < 10 ? "0" : ""
    }${milliseconds}`;
  };

  return (
    <div className="App">
      <section className="landing-section">
        <div className="row-container">
          <h1 className="landing-heading">Stop Watch</h1>
          <h1>{formatTime(elapsedTime)}</h1>
          <div className="flex justify-content-center">
            <button
              onClick={startStopWatch}
              className="btn btn-primary mx-2"
              disabled={isRunning}
            >
              Start
            </button>
            <button
              onClick={stopStopWatch}
              className="btn btn-primary mx-2"
              disabled={!isRunning}
            >
              Stop
            </button>
            <button onClick={resetStopWatch} className="btn btn-primary mx-2">
              Reset
            </button>
          </div>
        </div>
      </section>
    </div>
  );
}
